#ifndef TRACKING_H
#define TRACKING_H

#include <vector>

#include <opencv2/core/core.hpp>
#include <opencv/cv.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/video/background_segm.hpp>

#include "fileLoader.h"

	using namespace cv;

class Tracking
{
private:
	FileLoader* m_fileLoader;
	Mat currentFrame;
	Mat foregroundMask; //fg mask generated by MOG2 method
	Mat eroded;
	Mat opened;

	Ptr<BackgroundSubtractor> mog2BackgoundSubstractor; //MOG2 Background subtractor
	const double learning_rate; //learningRate for the backgound-substractor
	std::vector< Point2f > cornersToTrack;

	std::vector<Rect> boundingBoxes;

	void track_LK(InputArray gray, InputArray mask);
	void calcBoundingBoxes(Mat& binaryIn);
	void drawBoundingBoxes( Mat& drawOnImage );
	void findBigBlobs(InputOutputArray image, double thresh = 90);
	void Dilation(InputArray src, OutputArray dst, int size,int kernelType, int iterations = 1);
	void Erosion(InputArray src, OutputArray dst, int size,int kernelType, int iterations = 1);


public:
    Tracking();

    void setFileLoader( FileLoader* fileLoader );
    std::vector<cv::Rect> getBoundariesOfMovement();
    void displayDebugWindows();
//    unsigned int getIdOfBoundaries( cv::Rect boundary );
//    void setParameter( string );
};

#endif // TRACKING_H
